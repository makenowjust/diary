{"componentChunkName":"component---src-templates-post-js","path":"/post/2025-09-06-diary/","result":{"data":{"site":{"siteMetadata":{"title":"℘ make now just"}},"markdownRemark":{"html":"<h1>やったこと</h1>\n<h2>MD</h2>\n<p>WCS優勝デッキのトライアルをやっていた。<br>\nライゼオルを使ったのだけど、やたらと増Gとフワロスを投げられて苦戦していた。<br>\n7戦中7戦投げられたのでつらい。コイントス3-4で勝率も3-4。苦しい。</p>\n<h2>ディスカバリー</h2>\n<p>スターリーを全回収して、ラスボスを倒すところまでやった。<br>\nバルフレイナイトがつよすぎるのでラスボス戦も難無くクリアしてしまった。<br>\n縛った方がいいかもしれない。</p>\n<p>あとやることはボスラッシュくらいなのだけど、そこまでやる気が沸いていない。<br>\nそもそも操作が下手になっているので、勘を取り戻すまでやれる気がしていない。<br>\nどうしたものか。</p>\n<h2>SATソルバ</h2>\n<p>これまで発見した単位節をキューに追加して管理していたのだけど、MiniSATと同様に <code>trail</code> に追加した値をキューとして使うように修正した。<br>\nこの修正によって、発見した単位節が即座にモデルに反映されるようになったので、効率が良くなったように見える。<br>\nあと、一応メモリ効率などもよくなったのではないかと。</p>\n<p>同じくMiniSATのように <code>watcher</code> に <code>blocker</code> を持たせるようにして、それを使って単位伝播の処理を早めに回せるようにする最適化も実装してみた。<br>\nが、監視リテラルが移るごとにアロケーションが起こるのが許容できない気がしたので、今のところは取り入れてはいない。<br>\nどうしても必要になったらメモリプールと共に実装するかもしれない。</p>","fields":{"date":"2025-09-06"},"frontmatter":{"title":"ディスカバリーをクリアした"},"excerpt":"やったこと MD WCS優勝デッキのトライアルをやっていた。 ライゼオルを使ったのだけど、やたらと増Gとフワロスを投げられて苦戦していた。 7戦中7戦投げられたのでつらい。コイントス3-4で勝率も3-4。苦しい。 ディスカバリー スターリーを全回収して、ラスボスを倒すところまで…"},"prev":null,"next":{"fields":{"date":"2025-09-05","slug":"/post/2025-09-05-diary/"},"frontmatter":{"title":"気圧が苦しかった"}}},"pageContext":{"slug":"/post/2025-09-06-diary/","prevSlug":null,"nextSlug":"/post/2025-09-05-diary/"}},"staticQueryHashes":["1213933803","2548877431"],"slicesMap":{}}